/* Do not remove the comments below. It's the markers used by wiredep to inject
   sass dependencies when defined in the bower.json of your dependencies */
@import url("http://fonts.googleapis.com/css?family=Raleway:100,200,300,400,500,600,700,800,900");
.browsehappy {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0; }

html {
  height: 100%; }

body {
  margin: 0; }

body {
  font-family: 'Raleway', sans-serif;
  font-size: 15px;
  min-width: 500px;
  height: 100%; }

@media screen and (min-width: 840px) {
  [ui-view] {
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
        flex-direction: row;
    overflow: hidden;
    height: 100%; } }

[ui-view] {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -ms-flex-direction: column;
      flex-direction: column;
  width: 100%;
  height: 100%;
  background-color: #ee6e73;
  overflow-y: hidden; }

*, :after, :before {
  box-sizing: border-box; }

/* Do not remove the comments below. It's the markers used by gulp-inject to inject
   all your sass files automatically */
.container-wrapper {
  height: 100%;
  width: 100%; }
  .container-wrapper .header-wrapper {
    padding: 20px;
    width: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    color: #fff;
    border-bottom: 2px solid #fff; }
    .container-wrapper .header-wrapper > div {
      margin: 0 10px; }
    .container-wrapper .header-wrapper .app-icon-wrapper .fa {
      font-size: 5rem; }
    .container-wrapper .header-wrapper .app-title {
      width: 90%;
      font-size: 2rem; }
    .container-wrapper .header-wrapper .app-menu {
      width: 10%;
      -ms-flex-item-align: end;
          align-self: flex-end; }
      .container-wrapper .header-wrapper .app-menu .fa {
        font-size: 5rem; }
  .container-wrapper .body-wrapper {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    margin: 20px;
    height: 86%; }
    .container-wrapper .body-wrapper .user-list-wrapper {
      width: 25%;
      height: 100%;
      overflow-y: scroll; }
      .container-wrapper .body-wrapper .user-list-wrapper::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
        border-radius: 10px;
        background-color: #F5F5F5; }
      .container-wrapper .body-wrapper .user-list-wrapper::-webkit-scrollbar {
        width: 10px;
        background-color: #F5F5F5; }
      .container-wrapper .body-wrapper .user-list-wrapper::-webkit-scrollbar-thumb {
        border-radius: 5px;
        -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
        background-color: #ccc; }
    .container-wrapper .body-wrapper .user-info-wrapper {
      width: 75%;
      height: 100%;
      margin: 0 20px; }
      .container-wrapper .body-wrapper .user-info-wrapper user-widget-detail {
        width: 100%; }

@-webkit-keyframes fade-in-left {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0); }
  100% {
    opacity: 1;
    -webkit-transform: none;
            transform: none; } }

@keyframes fade-in-left {
  0% {
    opacity: 0;
    -webkit-transform: translate3d(-100%, 0, 0);
            transform: translate3d(-100%, 0, 0); }
  100% {
    opacity: 1;
    -webkit-transform: none;
            transform: none; } }

@-webkit-keyframes fade-in {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@keyframes fade-in {
  0% {
    opacity: 0; }
  100% {
    opacity: 1; } }

@-webkit-keyframes fade-out {
  0% {
    opacity: 1; }
  100% {
    opacity: 0; } }

@keyframes fade-out {
  0% {
    opacity: 1; }
  100% {
    opacity: 0; } }

@media screen and (max-width: 767px) {
  .app-features {
    display: none; }
  .app-tryit-btn, .app-gitter-chat-btn {
    -webkit-animation-delay: 0s !important;
            animation-delay: 0s !important;
    font-size: 1rem !important;
    min-width: 250px !important; } }

.user-widget-detail-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  width: 100%;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -ms-flex-line-pack: center;
      align-content: center; }
  .user-widget-detail-wrapper > div {
    margin: 10px 0; }
    .user-widget-detail-wrapper > div:first-child {
      margin-top: 0; }
  .user-widget-detail-wrapper .user-widget-detail-header {
    width: 100%;
    color: #ccc; }
    .user-widget-detail-wrapper .user-widget-detail-header h2 {
      line-height: 0.5;
      text-align: center; }
      .user-widget-detail-wrapper .user-widget-detail-header h2 span {
        display: inline-block;
        position: relative; }
        .user-widget-detail-wrapper .user-widget-detail-header h2 span:before, .user-widget-detail-wrapper .user-widget-detail-header h2 span:after {
          content: "";
          position: absolute;
          height: 5px;
          border-bottom: 1px solid #CCCCCC;
          top: 2px;
          width: 100%; }
        .user-widget-detail-wrapper .user-widget-detail-header h2 span:before {
          right: 100%;
          margin-right: 15px; }
        .user-widget-detail-wrapper .user-widget-detail-header h2 span:after {
          left: 100%;
          margin-left: 15px; }
  .user-widget-detail-wrapper .user-widget-detail-avatar {
    width: 100%;
    text-align: center; }
    .user-widget-detail-wrapper .user-widget-detail-avatar img {
      width: 20%;
      height: auto; }
  .user-widget-detail-wrapper .user-widget-detail-bio {
    width: 100%;
    color: #fff; }
    .user-widget-detail-wrapper .user-widget-detail-bio .user-widget-detail-bio-label {
      border-bottom: 2px solid #fff;
      border-top: 2px solid #fff; }
    .user-widget-detail-wrapper .user-widget-detail-bio .user-widget-detail-bio-label, .user-widget-detail-wrapper .user-widget-detail-bio .user-widget-detail-bio-desc {
      display: -webkit-box;
      display: -ms-flexbox;
      display: flex;
      width: 100%;
      padding: 20px; }
      .user-widget-detail-wrapper .user-widget-detail-bio .user-widget-detail-bio-label > div:first-child, .user-widget-detail-wrapper .user-widget-detail-bio .user-widget-detail-bio-desc > div:first-child {
        width: 25%;
        font-size: 2rem;
        font-weight: bold; }
      .user-widget-detail-wrapper .user-widget-detail-bio .user-widget-detail-bio-label > div:last-child, .user-widget-detail-wrapper .user-widget-detail-bio .user-widget-detail-bio-desc > div:last-child {
        width: 75%;
        font-size: 2rem; }

.user-widget-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
      -ms-flex-direction: column;
          flex-direction: column;
  -webkit-box-align: center;
      -ms-flex-align: center;
          align-items: center;
  color: #fff;
  padding: 10px; }
  .user-widget-wrapper .user-widget-name-wrapper {
    width: 100%;
    margin: 10px 0;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-size: 2rem;
    font-weight: bold; }
    .user-widget-wrapper .user-widget-name-wrapper:hover {
      color: #ccc; }
    .user-widget-wrapper .user-widget-name-wrapper.user-widget-selected {
      color: #57acdf; }

/*# sourceMappingURL=data:application/json;base64, */
